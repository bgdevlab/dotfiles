#!/usr/bin/env bash

set -e

STARTING_DIR=$PWD
cd $HOME

if test ! $(which brew); then
    echo '================================================================================'
    echo 'Installing homebrew...'
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    echo 'Done installing homebrew.'
    echo '================================================================================'
fi

# if test ! -e $HOME/.vim/autoload/plug.vim; then
#     echo '================================================================================'
#     echo 'Installing vim-plug...'
#     curl --create-dirs -fLo $HOME/.vim/autoload/plug.vim https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
#     echo 'Done installing vim-plug.'
#     echo '================================================================================'
# fi

# # @see: https://intelephense.com/faq.html
# if test ! -e $HOME/intelephense/licence.txt; then
#     echo '================================================================================'
#     echo 'Setting up Intelephense license...'
#     mkdir -p $HOME/intelephense
#     echo 'Enter your Intelephense license key:'
#     read -s INTELEPHENSE_LICENSE_KEY
#     echo $INTELEPHENSE_LICENSE_KEY > $HOME/intelephense/licence.txt
#     echo 'Done setting up Intelephense license.'
#     echo '================================================================================'
# fi

echo '================================================================================'
echo 'Linking dotfiles...'
/bin/bash $HOME/dotfiles/link
echo 'Done linking dotfiles.'
echo '================================================================================'


echo '================================================================================'
echo " Install older versions / override brew formula for older versions we use."
# https://remarkablemark.org/blog/2017/02/03/install-brew-package-version/

if test ! -z "$PG_INSTALL"; then
    if test ! -d "/Applications/Navicat for PostgreSQL.app"; then
        # no longer required - see tap tap 'bgdevlab/navicat-for-postgresql'
        echo "  - Navicat 12 (12.0.27)"
        cd $(find $(brew --repository) -name navicat-for-postgresql.rb -exec dirname {} \;)
        # curl -o navicat-for-postgresql.rb -s https://raw.githubusercontent.com/Homebrew/homebrew-cask/ea872153138b0255ff7d52bcda996ec221e02b7d/Casks/navicat-for-postgresql.rb
        curl -o navicat-for-postgresql.rb -s https://gist.githubusercontent.com/bgdevlab/3bd8c737ffa958ca79dc55e3a61681dd/raw/266879fcfa9df02706dca9766a77c831959cd4b7/navicat-cask-12.1.31.rb
        brew install navicat-for-postgresql
        git checkout navicat-for-postgresql.rb
        echo '================================================================================'
    fi
fi


echo "# Currently in directory ($(pwd))"
echo '================================================================================'
echo 'Installing, updating, and cleaning up brew dependencies...'
brew bundle --global
brew bundle cleanup --force --global
# brew services cleanup
# sudo brew services cleanup
brew cleanup
echo 'Done installing, updating, and cleaning up brew dependencies.'
echo '================================================================================'

# echo '================================================================================'
# echo 'Installing and updating composer dependencies...'
# composer global update --with-all-dependencies
# echo 'Done installing and updating composer dependencies.'
# echo '================================================================================'

# echo '================================================================================'
# echo 'Installing and updating npm dependencies...'
# npm install -g npm@latest
# npm update -g
# echo 'Done installing and updating npm dependencies.'
# echo '================================================================================'

# echo '================================================================================'
# echo 'Installing and updating pecl dependencies...'
# pecl update-channels
# # For whatever reason, brew is symlinking to the following directory, but it doesn't exist
# # and extensions can't be installed. This should resolve that.
# mkdir /usr/local/lib/php/pecl -p
# # pecl upgrade will also install if it isn't yet installed, where as pecl
# # install will fail if it is installed.
# pecl upgrade pcov
# echo 'Done installing and updating pecl dependencies.'
# echo '================================================================================'

# echo '================================================================================'
# echo 'Installing and updating FZF...'
# /usr/local/opt/fzf/install --key-bindings --completion --update-rc --no-bash --no-fish
# echo 'Done installing and updating FZF.'
# echo '================================================================================'

echo '================================================================================'
echo 'Installing and updating terminal themes...'
for theme in 3024_Day AtomOneLight PencilLight Material Spring ayu_light; do 
    THEME=https://raw.githubusercontent.com/dexpota/kitty-themes/master/themes/${theme}.conf
    wget -q "$THEME" -P ~/.config/kitty/themes
done
echo 'Done installing and updating terminal themes.'
echo '================================================================================'

# Additionally, if you receive “zsh compinit: insecure directories” warnings
# when attempting to load these completions, you may need to run this
# see: https://docs.brew.sh/Shell-Completion
# compaudit | xargs chmod g-w


echo 'Done!'


# https://scriptingosx.com/2017/04/about-bash_profile-and-bashrc-on-macos/
# Alternative to dotfiles - https://yadm.io
